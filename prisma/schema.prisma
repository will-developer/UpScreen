// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  votes         Vote[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Title {
  id            String   @id @default(cuid())
  name          String
  description   String?  @db.Text
  genre         String
  imageUrl      String?
  votes         Vote[]
  tmdbId        Int?     @unique
  tmdbRating    Float?   @default(0)
  tmdbVoteCount Int?     @default(0)
  posterPath    String?
  backdropPath  String?
  type          String?  @default("movie") // "movie" or "series"
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Vote {
  id        String   @id @default(cuid())
  userId    String
  titleId   String
  rating    Int      @default(1) // 1-5 stars
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  title     Title    @relation(fields: [titleId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@unique([userId, titleId])
}
